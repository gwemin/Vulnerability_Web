{"version":3,"sources":["firebase_config.js","components/Sidebar.js","pages/BarChart.js","pages/Server_vulnerability.js","pages/summary.js","Login/login.js","pages/UserInfoTable.js","pages/UserInfo.js","components/Router.js","components/App.js","index.js"],"names":["authService","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","fireDB","firestore","drawerWidth","UseStyles","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","logout","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","Sidebar","isLoggedIn","children","history","useHistory","classes","className","CssBaseline","AppBar","position","Toolbar","Typography","variant","noWrap","Button","color","endIcon","onClick","signOut","push","Drawer","paper","anchor","Divider","List","to","style","textDecoration","ListItem","button","title","ListItemIcon","fontSize","ListItemText","primary","BarChart","result","console","log","data","labels","datasets","label","Management","borderColor","borderWidth","height","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","Server_vulnerability","user","useState","Items","SetItems","InputFile","SetinputFile","Jsondata","SetJsondata","Confirm","SetConfirm","Space","SetSpace","today","Date","day","String","getFullYear","getMonth","getDate","getHours","getMinutes","float","Good","NA","Probability","Vulnerable","total","collection","doc","now","set","hostname","key","date","creatorId","uid","then","alert","catch","error","type","onChange","e","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","target","wb","XLSX","wsname3","SheetNames","ws3","Sheets","sheet_to_json","Array","map","sample","index","temp","Object","number","__EMPTY_1","category","__EMPTY_2","__EMPTY_9","datatemp","__EMPTY_10","split","shift","current","result2","__rowNum__","onerror","d","fileReader2","wsname4","ws4","data2","temp3","temp2","__EMPTY_3","__EMPTY_4","__EMPTY_5","__EMPTY_6","__EMPTY_7","readExcel","files","class","scope","align","Itembox","textAlign","marginRight","summary","Card","elevation","CardContent","gutterBottom","component","marginTop","flexDirection","alignItems","avatar","margin","secondary","main","form","submit","Login","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","GithubAuthProvider","EmailAuthProvider","tosUrl","privacyPolicyUrl","Container","maxWidth","Avatar","firebaseAuth","Box","mt","useRowStyles","borderBottom","UserInfoTable","props","React","open","setOpen","Fragment","TableRow","TableCell","IconButton","size","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","table","minWidth","UserInfo","User","vulnerabilityList","setVulnerabilityList","resultFunc","a","where","get","docs","useEffect","TableContainer","Paper","Table","TableHead","TableBody","Router","basename","path","exact","Summary","useStyles","lodingtext","left","top","loding","App","init","setInit","SetUser","setIsLoggedIn","onAuthStateChanged","userobj","CircularProgress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.348fcb9e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\n\r\nconst config = {\r\n  apiKey:process.env.REACT_APP_API_KEY,\r\n  authDomain:process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId:process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket:process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId:process.env.REACT_APP_MESSAGIN,\r\n  appId:process.env.REACT_APP_APP_ID,\r\n  measurementId:process.env.REACT_APP_MEASUREMENTID\r\n};\r\nexport const fire = firebase.initializeApp(config);\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const fireDB = firebase.firestore();\r\n","import React, { useEffect } from 'react';\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AirplayIcon from '@material-ui/icons/Airplay';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { Button, Link } from '@material-ui/core';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport {authService} from 'firebase_config'\r\n// import NetworkCheckIcon from '@material-ui/icons/NetworkCheck';\r\n// import StorageIcon from '@material-ui/icons/Storage';\r\n\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst UseStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  logout: {\r\n    marginLeft : \"70%\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function Sidebar( {isLoggedIn, children} ) {\r\n  const history = useHistory()\r\n  const classes = UseStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n    <CssBaseline />\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          취약점 통합관리 웹 시스템\r\n        </Typography>\r\n        {isLoggedIn ? (\r\n        <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.logout}\r\n        endIcon={<MeetingRoomIcon />}\r\n        onClick={() => {\r\n          authService.signOut();\r\n          history.push(\"/\");\r\n        }}>\r\n        로그아웃\r\n      </Button>\r\n      ) : (\r\n        <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.logout}\r\n        endIcon={<VpnKeyIcon />}\r\n        onClick={() => {\r\n          history.push(\"/\");\r\n        }}>\r\n        로그인\r\n      </Button>\r\n      )}\r\n      </Toolbar>\r\n    </AppBar>\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n      anchor=\"left\"\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n       \r\n      {isLoggedIn ? (\r\n        <>\r\n        <List>     {/*  navigation bar */}\r\n       \r\n          <NavLink  to=\"/Server_vulnerability\" style={{ textDecoration: 'none' }}>\r\n            <ListItem button title=\"서버 취약점\">\r\n              <ListItemIcon><SecurityIcon color=\"primary\" fontSize=\"large\"/></ListItemIcon>\r\n              <ListItemText primary={'서버 취약점'} />\r\n            </ListItem>\r\n            </NavLink >\r\n        </List>\r\n\r\n        \r\n      \r\n      <Divider />\r\n      <List>\r\n            <NavLink  to=\"/UserInfo\" style={{ textDecoration: 'none' }}>\r\n            <ListItem button title=\"사용자정보\">\r\n              <ListItemIcon><VpnKeyIcon color=\"primary\" fontSize=\"large\"/></ListItemIcon>\r\n              <ListItemText primary={'사용자정보'} />\r\n            </ListItem>\r\n            </NavLink >\r\n      </List>\r\n      \r\n      <Divider />\r\n\r\n      <List>    {/* navigation bar */}          \r\n            <NavLink  to=\"/summary\" style={{ textDecoration: 'none' }}>\r\n                <ListItem button title=\"개요\" >\r\n                  <ListItemIcon><AirplayIcon color=\"primary\" fontSize=\"large\"/></ListItemIcon>\r\n                  <ListItemText primary={'개요'} />\r\n                  \r\n                </ListItem>\r\n            </NavLink >\r\n            </List>\r\n          <Divider />\r\n            \r\n      </>\r\n      ) : (\r\n        <>\r\n\r\n          <List>    {/* navigation bar */}          \r\n            <NavLink  to=\"/summary\" style={{ textDecoration: 'none' }}>\r\n                <ListItem button title=\"개요\" >\r\n                  <ListItemIcon><AirplayIcon color=\"primary\" fontSize=\"large\"/></ListItemIcon>\r\n                  <ListItemText primary={'개요'} />\r\n                  \r\n                </ListItem>\r\n            </NavLink >\r\n            </List>\r\n\r\n            <Divider />\r\n        </>\r\n        )}\r\n      </Drawer>\r\n      {/* main 시작부분 */}\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        { children }  \r\n      </main>\r\n    </div>\r\n  );\r\n}","\r\nimport React from 'react'\r\nimport { Bar  } from 'react-chartjs-2'\r\n\r\n\r\n\r\n//json_data[0].Probability,json_data[1].Probability,json_data[2].Probability,json_data[3].Probability, json_data[4].Probability\r\n\r\nconst BarChart = ({result}) => {\r\n  console.log(result)\r\n  console.log(\"hello\")\r\n  return (\r\n    \r\n    <div className=\"barChart\">\r\n      \r\n      <Bar \r\n        data={{\r\n          labels: ['계정관리', '서비스 관리', '패치 관리', '로그 관리', '보안 관리','DB 관리'],\r\n          datasets: [\r\n            {\r\n              label: '퍼센트 ( % )',\r\n              data: result.Management,\r\n              backgroundColor: [\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n              ],\r\n              borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n              ],\r\n              borderWidth: 1,\r\n            },\r\n            // {\r\n            //   label: 'Quantity',\r\n            //   data: [47, 52, 67, 58, 9, 50],\r\n            //   backgroundColor: 'orange',\r\n            //   borderColor: 'red',\r\n            // },\r\n          ],\r\n        }}\r\n        height={400}\r\n        width={600}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          legend: {\r\n            labels: {\r\n              fontSize: 25,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BarChart","import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Button from '@material-ui/core/Button';\r\nimport BarChart from './BarChart'\r\nimport './server_vulnerability.css'\r\nimport { fireDB } from \"../firebase_config\";\r\n\r\n\r\nconst Server_vulnerability = ({user}) => {\r\n  \r\n  const [Items, SetItems] = useState([]); // Server_vulnerability.js Table 결과값\r\n  const [InputFile, SetinputFile] = useState(false); // 파일 입력 유무\r\n  const [Jsondata, SetJsondata] = useState([]); // UserInfo 통계값 \r\n  const [Confirm, SetConfirm] = useState(false) //취약점결과 엑셀파일 유무\r\n  const [Space,SetSpace] = useState({Management : ''});\r\n  let today = new Date(); \r\n  // 년도 월 일 시간 분 을 day에 넣음\r\n  const day = String(today.getFullYear()) + \"/\" + String((today.getMonth() + 1)) + \"/\" + String(today.getDate()) + \"  \" + String(today.getHours()) + \":\" +  String(today.getMinutes());\r\n  \r\n\r\n  const readExcel = (file) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file);\r\n\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n\r\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n        const wsname3 = wb.SheetNames[4];\r\n\r\n        if (wb.SheetNames[0] === \"표지\" && wb.SheetNames[1] === \"대상\" && wb.SheetNames[2] === \"통계\" && wb.SheetNames[3] === \"요약\"){\r\n          SetConfirm(true);\r\n        } else {\r\n          alert(\"취약점 결과 csv,xlsx 파일이 아닙니다.\")\r\n        }\r\n\r\n        const ws3 = wb.Sheets[wsname3];\r\n\r\n        const data = XLSX.utils.sheet_to_json(ws3);\r\n\r\n        // 점검항목, 결과 유무를 result 에 저장하였다.\r\n        let result = new Array();\r\n        \r\n         // number = W-01  ,  category = Administrator 계정 이름 바꾸기  , result = Y     inspection = 현황  , result2 = 결과\r\n         data.map((sample,index) => {\r\n           if(index > 16 && index < 99){\r\n             let temp = new Object();\r\n             temp.number = sample.__EMPTY_1;\r\n             temp.category = sample.__EMPTY_2;\r\n             temp.result = sample.__EMPTY_9;\r\n             let datatemp = sample.__EMPTY_10.split('※'); // Array 3개 전부 첫번째 빈칸\r\n             datatemp.shift(); // 첫번째 Array삭제\r\n            //  console.log(datatemp)\r\n             temp.current  = datatemp[0]; // 현황\r\n             temp.result2 = datatemp[1] // 결과\r\n             temp.key = sample.__rowNum__;\r\n             result.push(temp);\r\n           }\r\n         })\r\n \r\n      \r\n         // const jsonResult = JSON.stringify(result);\r\n \r\n         \r\n         resolve(result);\r\n \r\n       };\r\n \r\n\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n      \r\n    promise.then((d) => {\r\n      // console.log(d)\r\n      SetItems(d);\r\n      \r\n      // const result = []\r\n      // d.map((data,index) => {\r\n      //   result.push(data.__EMPTY_2)\r\n      //   result.push(data.__EMPTY_7)\r\n      // })\r\n\r\n      // console.log(result)\r\n    })   \r\n\r\n    const promise2 = new Promise((resolve, reject) => {\r\n      const fileReader2 = new FileReader();\r\n      fileReader2.readAsArrayBuffer(file);\r\n\r\n      fileReader2.onload = (e) => {\r\n      const bufferArray = e.target.result;\r\n\r\n      const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n        \r\n      // 5번째 시트 얻어오기\r\n      const wsname4 = wb.SheetNames[4];\r\n      const ws4 = wb.Sheets[wsname4];\r\n      const data2 = XLSX.utils.sheet_to_json(ws4);\r\n        \r\n      // 진단 요약한 결과를 Object를 생성하여 저장한 후 Array(result2 에 push 하여 취약점 통계 Array(result2)를 생성 하였다.\r\n      \r\n      //hostname parsing\r\n      \r\n      let result2 = new Array();\r\n      \r\n       // EMPTY_3 : 총 검사 개수  , EMPTY_4 : 양호  ,  EMPTY_5 : 취약   , EMPTY_6 : 수동,알수없음   ,  EMPTY_7 : 보안수준(통계)\r\n      data2.map((temp3,index) => {\r\n         if (index > 7 && index < 15){\r\n           let temp2 = new Array();\r\n           temp2.total = temp3.__EMPTY_3;\r\n           temp2.Good = temp3.__EMPTY_4;\r\n           temp2.Vulnerable = temp3.__EMPTY_5;\r\n           temp2.NA = temp3.__EMPTY_6;\r\n           temp2.Probability = temp3.__EMPTY_7 * 100;\r\n           temp2.key = temp3.__rowNum__\r\n           result2.push(temp2);\r\n        }\r\n      })\r\n      result2.push(wsname4)\r\n\r\n      \r\n       // const jsonResult = JSON.stringify(result);\r\n\r\n       \r\n       resolve(result2);\r\n\r\n     };\r\n\r\n      fileReader2.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n      \r\n    promise2.then((d) => {\r\n      //console.log(d);\r\n      SetSpace({ Management : [ // BarChart를 같이 쓰기위해\r\n        d[0].Probability,\r\n        d[1].Probability,\r\n        d[2].Probability,\r\n        d[3].Probability,\r\n        d[4].Probability,\r\n        d[5].Probability,\r\n      ]});\r\n      SetJsondata(d);\r\n   \r\n      // const result = []\r\n      // d.map((data,index) => {\r\n      //   result.push(data.__EMPTY_2)\r\n      //   result.push(data.__EMPTY_7)\r\n      // })\r\n\r\n      // console.log(result)\r\n    })     \r\n  };\r\n\r\n  //Jsondata[6].Probability.toFixed(2)\r\n\r\n  return (\r\n    <div className=\"server_vulnerability\">\r\n       <div>\r\n      { InputFile && Confirm ? (\r\n         \r\n        <div>\r\n        <Button\r\n        style={{float : \"right\", width: \"100px\"}}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        onClick = {() => {\r\n\r\n        \r\n          if (typeof(Jsondata[7]) === \"string\" && \r\n              typeof(Jsondata[6].Good) === \"number\" && \r\n              typeof(Jsondata[6].NA) === \"number\" && \r\n              typeof(Jsondata[6].Probability) === \"number\" && \r\n              typeof(Jsondata[6].Vulnerable) === \"number\" &&\r\n              typeof(Jsondata[6].total) === \"number\"){\r\n      //Date.now() 현재시간 나타내준다.\r\n          fireDB\r\n            .collection(\"Vulnerability_Json\")\r\n            .doc(Date.now() + Jsondata[7])\r\n            .set({\r\n              hostname: Jsondata[7],\r\n              total: Jsondata[6].total,\r\n              Good : Jsondata[6].Good,\r\n              NA : Jsondata[6].NA,\r\n              Probability : Jsondata[6].Probability,\r\n              Vulnerable : Jsondata[6].Vulnerable,\r\n              key : Jsondata[6].key,\r\n              date: day,\r\n              creatorId : user.uid,\r\n              Management: [ // 통계 \r\n                Jsondata[0].Probability,\r\n                Jsondata[1].Probability,\r\n                Jsondata[2].Probability,\r\n                Jsondata[3].Probability,\r\n                Jsondata[4].Probability,\r\n                Jsondata[5].Probability,\r\n              ]\r\n            })\r\n            .then(alert(\"저장되었습니다.\"))\r\n            .catch(error=> console.log(error))\r\n\r\n\r\n            \r\n          } \r\n        }}\r\n        >\r\n          저장\r\n        </Button>\r\n        <br/><br/><br/>\r\n        <h1> 취약점 결과 </h1>\r\n        </div>\r\n      ) : (\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => {\r\n          const file = e.target.files[0];\r\n          readExcel(file);\r\n          SetinputFile(true)\r\n        } \r\n      }\r\n      />\r\n      )}\r\n      </div>\r\n      {InputFile&&Confirm ? (\r\n      <div>\r\n        \r\n         <BarChart result={Space}/>\r\n         <br/><br/><br/><br/>\r\n         <h4>Y : 양호 , N : 취약 , N/A : 해당사항 없음</h4>\r\n         <table class=\"type09\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"cols\">구분</th>\r\n              <th scope=\"cols\">점검항목</th>\r\n              <th scope=\"cols\">결과 유무</th>\r\n              <th scope=\"cols\">점검 내용</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Items.map((d) => (\r\n              <tr key={ d.key } align=\"center\">\r\n                <th scope='row'>{d.number}</th>\r\n                <td>{d.category}</td>\r\n                <td>{d.result}</td>\r\n                <th>{d.current}<br/>{d.result2}</th>\r\n              </tr>\r\n            ))}\r\n            \r\n          </tbody>\r\n        </table>\r\n              \r\n       \r\n        \r\n      </div>\r\n      ) : (\r\n      <h1> 파일 없음 </h1>\r\n      )}\r\n  \r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Server_vulnerability;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst UseStyles = makeStyles((theme) => ({\r\n  Itembox: {\r\n    display: \"inline-block\",\r\n    width: 400,\r\n    height : 400,\r\n    textAlign : \"center\",\r\n    marginRight: \"100px\",\r\n    background : \"#91A8d0\",\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function summary() {\r\n  const classes = UseStyles();\r\n\r\n  return (\r\n    <div>\r\n    <Card className={classes.Itembox} elevation={5}>\r\n      <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n          Server 취약점은 아래와 같이 5가지로 나뉩니다.\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"initial\" component=\"p\">\r\n            <ul>     \r\n            <h3><li>계정 관리</li></h3>\r\n\r\n            <h3><li>서비스 관리</li></h3>\r\n\r\n            <h3><li>패치 관리</li></h3>\r\n\r\n            <h3><li>로그 관리</li></h3>\r\n  \r\n            <h3><li>보안 관리</li></h3>\r\n            </ul>\r\n          </Typography>\r\n        </CardContent>\r\n    </Card>\r\n    \r\n    <Card className={classes.Itembox} elevation={5}>\r\n      <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          계정 관리\r\n          </Typography>\r\n          <h3>\r\n          <Typography variant=\"body2\" color=\"initial\" component=\"p\">     \r\n            Window Server는 일반 사용자가 사용하기 보다는 <br/>\r\n            관리자가 사용하기에 계정 관리를 철저하게 할 필요성이 있습니다.  \r\n            \r\n          </Typography>\r\n          </h3>\r\n        </CardContent>\r\n    </Card>\r\n\r\n    <Card className={classes.Itembox} elevation={5}>\r\n      <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          서비스 관리\r\n          </Typography>\r\n          <h3>\r\n          <Typography variant=\"body2\" color=\"initial\" component=\"p\">     \r\n            Window Server는 일반 사용자가 사용하기 보다는 <br/>\r\n            관리자가 사용하기에 계정 관리를 철저하게 할 필요성이 있습니다.  \r\n            \r\n          </Typography>\r\n          </h3>\r\n        </CardContent>\r\n    </Card>\r\n    <Card className={classes.Itembox} elevation={5}>\r\n      <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          패치 관리\r\n          </Typography>\r\n          <h3>\r\n          <Typography variant=\"body2\" color=\"initial\" component=\"p\">     \r\n          주요한 취약점을 패치하기 위해 배포되는 프로그램으로 각각의 서비스팩이 발표된 이후 패치가 추가될 필요가 있을 때 별도로 발표됩니다. <br/>\r\n          그러므로 보안패치는 필수 라고 할수 있습니다.\r\n          </Typography>\r\n          </h3>\r\n        </CardContent>\r\n    </Card>\r\n    <Card className={classes.Itembox} elevation={5}>\r\n      <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          로그 관리\r\n          </Typography>\r\n          <h3>\r\n          <Typography variant=\"body2\" color=\"initial\" component=\"p\">     \r\n          로그는 소프트웨어 혹은 하드웨어 서비스들이 지속적으로 만들어내는 시스템 이벤트의 기록입니다.<br/>\r\n          서버들은 더더욱 로그관리가 중요합니다. 그래야 어떤 버그인지 알아낼 수 있습니다.\r\n          </Typography>\r\n          </h3>\r\n        </CardContent>\r\n    </Card>\r\n    <Card className={classes.Itembox} elevation={5}>\r\n      <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          보안 관리\r\n          </Typography>\r\n          <h3>\r\n          <Typography variant=\"body2\" color=\"initial\" component=\"p\">     \r\n            OS에 해커로 부터 공격위험성이 있는지 체크하고 결과를 보고 보완해야합니다.\r\n          </Typography>\r\n          </h3>\r\n        </CardContent>\r\n    </Card>\r\n   \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MaterialLink from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst UseStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3,10),\r\n  },\r\n  \r\n}));\r\n\r\n    \r\n    \r\n\r\nexport default function Login() {\r\n  \r\n\r\n\r\n  const classes = UseStyles();\r\n  // Configure FirebaseUI.\r\n  const uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n    // We will display Google and Facebook as auth providers.\r\n    \r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    ],\r\n    tosUrl: 'http://localhost/tos',\r\n    privacyPolicyUrl: 'http://localhost/privacypolicy'\r\n  };\r\n \r\n  return (\r\n    <div className=\"main\">\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n  <CssBaseline />\r\n  <div className={classes.paper}>\r\n    <Avatar className={classes.avatar}>\r\n      <LockOutlinedIcon />\r\n    </Avatar>\r\n\r\n    \r\n    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n    \r\n  </div>\r\n  \r\n</Container>\r\n\r\n      <Box mt={8}>\r\n  </Box>\r\n\r\n\r\n\r\n    </div>\r\n    \r\n  );\r\n};","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport BarChart from 'pages/BarChart'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n  });\r\n\r\n  // 키값 새로 설정해야한다.\r\nfunction UserInfoTable(props) {\r\n    const data = props.data;\r\n    const key  = props.key;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n    console.log(data)\r\n    return (\r\n      <React.Fragment>\r\n        <TableRow className={classes.root}>\r\n            <TableCell>\r\n                <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n            </TableCell>\r\n            <TableCell align=\"center\">{data.date}</TableCell>\r\n            <TableCell align=\"center\">{data.total}</TableCell>\r\n            <TableCell align=\"center\">{data.Good}</TableCell>\r\n            <TableCell align=\"center\">{data.Vulnerable}</TableCell>\r\n            <TableCell align=\"center\">{data.NA}</TableCell>\r\n            <TableCell align=\"center\">{data.Probability}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                \r\n                <BarChart result={data} />\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\nexport default UserInfoTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {fireDB} from 'firebase_config'\r\nimport UserInfoTable from './UserInfoTable';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function UserInfo({User}) {\r\n  const [vulnerabilityList,setVulnerabilityList] = useState([]);\r\n\r\n\r\n  const resultFunc = async() => {\r\n    const result = await fireDB\r\n        .collection(\"Vulnerability_Json\")\r\n        .where(\"creatorId\", \"==\" , User.uid)\r\n        .get();\r\n    // result.docs.map(doc => setVulnerabilityList(doc.data()));\r\n    // console.log(nweets.docs.map(doc => doc.data()));\r\n    setVulnerabilityList(result.docs.map(doc => doc.data()))\r\n    \r\n};\r\nuseEffect(() => {\r\n  resultFunc()\r\n  \r\n},[]);\r\n\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell/>\r\n            <TableCell align=\"center\">날짜</TableCell>\r\n            <TableCell align=\"center\">전체</TableCell>\r\n            <TableCell align=\"center\">양호</TableCell>\r\n            <TableCell align=\"center\">취약</TableCell>\r\n            <TableCell align=\"center\">해당 없음</TableCell>\r\n            <TableCell align=\"center\">보안 수준</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {vulnerabilityList.map((data) => (\r\n            <UserInfoTable key={data.key} data={data} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Sidebar from 'components/Sidebar';\r\nimport Server_vulnerability from 'pages/Server_vulnerability';\r\nimport Summary from 'pages/summary';\r\nimport Login from 'Login/login';\r\nimport UserInfo from 'pages/UserInfo'\r\nfunction Router({User,isLoggedIn}) {\r\n\r\n    return (\r\n        <BrowserRouter basename=\"/Vulnerability_Web\">\r\n            <Sidebar isLoggedIn={isLoggedIn}>\r\n                <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route path=\"/\" exact component={Summary} />\r\n                        <Route path=\"/UserInfo\" exact component={() => \r\n                            <UserInfo User={User} />} \r\n                        />\r\n                        <Route path=\"/Server_vulnerability\" exact component={() => <Server_vulnerability user={User} />} />\r\n                        <Route path=\"/summary\" exact component={Summary} />\r\n\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Route path=\"/\" exact component={() => \r\n                            <Login />}\r\n                        />\r\n                        <Route path=\"/summary\" exact component={Summary} />\r\n                        \r\n                    </>  \r\n                    )}\r\n                    \r\n            \r\n                </Switch>\r\n            </Sidebar>\r\n        </BrowserRouter>\r\n      \r\n    )\r\n}\r\n\r\nexport default Router\r\n","import React, {useState,useEffect} from 'react'\r\nimport Router from 'components/Router';\r\nimport { authService } from 'firebase_config'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    lodingtext : {\r\n      left: \"50%\", \r\n      position: \"absolute\", \r\n      top: \"55vh\", \r\n    },\r\n    loding :{\r\n      left: \"50%\", \r\n      position: \"absolute\", \r\n      top: \"50vh\", \r\n    },\r\n  }));\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [User, SetUser] = useState(null);\r\n  const [isLoggedIn , setIsLoggedIn] = useState(false); \r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((userobj) => {\r\n      if(userobj){\r\n        setIsLoggedIn(true);\r\n        SetUser(userobj);\r\n      } else{\r\n        setIsLoggedIn(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n  return (\r\n      <>\r\n        {init ? <Router User={User} isLoggedIn={isLoggedIn} /> :  \r\n        <div className={classes.root}> \r\n          <CircularProgress className={classes.loding} /> <br/>\r\n          <h5 className={classes.lodingtext}>로딩중....</h5>\r\n        </div> }\r\n      </>      \r\n    )\r\n}  \r\n\r\n\r\n  \r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}